{"version":3,"sources":["components/Board.js","functions/utils.js","components/Game.js","functions/boardFunctions.js","App.js","index.js"],"names":["Board","onClick","squares","renderSquare","i","className","useLocalStorageState","key","defaultValue","serialize","JSON","stringify","deserialize","parse","React","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","prevKey","current","removeItem","setItem","Game","initialSquares","Array","fill","currentStep","setCurrentStep","history","setHistory","nextValue","filter","Boolean","length","calculateNextValue","winner","lines","a","b","c","calculateWinner","status","every","calculateStatus","moves","map","stepSquares","step","desc","isCurrentStep","disabled","square","newHistory","slice","squaresCopy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAgCeA,EA9BD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACxB,SAASC,EAAaC,GACpB,OACE,wBAAQC,UAAU,SAASJ,QAAS,kBAAMA,EAAQG,IAAlD,SACGF,EAAQE,KAKf,OACE,gCACE,sBAAKC,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKE,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKE,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,UCjBtB,SAASG,EACPC,GAGC,IAFDC,EAEA,uDAFe,GAEf,yDAD2D,GAC3D,IADEC,iBACF,MADcC,KAAKC,UACnB,MAD8BC,mBAC9B,MAD4CF,KAAKG,MACjD,EACA,EAA0BC,YAAe,WACvC,IAAMC,EAAsBC,OAAOC,aAAaC,QAAQX,GACxD,OAAIQ,EACKH,EAAYG,GAEU,oBAAjBP,EAA8BA,IAAiBA,KAL/D,mBAAOW,EAAP,KAAcC,EAAd,KAQMC,EAAaP,SAAaP,GAWhC,OATAO,aAAgB,WACd,IAAMQ,EAAUD,EAAWE,QACvBD,IAAYf,GACdS,OAAOC,aAAaO,WAAWF,GAEjCD,EAAWE,QAAUhB,EACrBS,OAAOC,aAAaQ,QAAQlB,EAAKE,EAAUU,MAC1C,CAACZ,EAAKY,EAAOV,IAET,CAACU,EAAOC,GCxBjB,IAkEeM,EAlEF,WACX,IAAMC,EAAiBC,MAAM,GAAGC,KAAK,MAKrC,EAAsCvB,EACpC,kBACA,GAFF,mBAAOwB,EAAP,KAAoBC,EAApB,KAIA,EAA8BzB,EAAqB,oBAAqB,CACtEqB,IADF,mBAAOK,EAAP,KAAgBC,EAAhB,KAIM/B,EAAU8B,EAAQF,GAElBI,ECXR,SAA4BhC,GAC1B,OAAOA,EAAQiC,OAAOC,SAASC,OAAS,IAAM,EAAI,IAAM,IDUtCC,CAAmBpC,GAC/BqC,ECLR,SAAyBrC,GAWvB,IAVA,IAAMsC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEApC,EAAI,EAAGA,EAAIoC,EAAMH,OAAQjC,IAAK,CACrC,kBAAkBoC,EAAMpC,GAAxB,GAAOqC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIzC,EAAQuC,IAAMvC,EAAQuC,KAAOvC,EAAQwC,IAAMxC,EAAQuC,KAAOvC,EAAQyC,GACpE,OAAOzC,EAAQuC,GAGnB,OAAO,KDZQG,CAAgB1C,GACzB2C,ECxBR,SAAyBN,EAAQrC,EAASgC,GACxC,OAAOK,EAAM,kBACEA,GACXrC,EAAQ4C,MAAMV,SAAd,oCAEgBF,GDmBLa,CAAgBR,EAAQrC,EAASgC,GAoBhD,IAAMc,EAAQhB,EAAQiB,KAAI,SAACC,EAAaC,GACtC,IAAMC,EAAgB,IAATD,EAAA,0CAAkDA,GACzDE,EAAgBF,IAASrB,EAC/B,OACE,6BACE,yBAAQwB,SAAUD,EAAepD,QAAS,kBAAM8B,EAAeoB,IAA/D,UACGC,EADH,IACUC,EAAgB,YAAc,SAFjCF,MAQb,OACE,sBAAK9C,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAAOJ,QAjCb,SAAsBsD,GACpB,IAAIhB,IAAUrC,EAAQqD,GAAtB,CAIA,IAAMC,EAAaxB,EAAQyB,MAAM,EAAG3B,EAAc,GAC5C4B,EAAW,YAAOxD,GACxBwD,EAAYH,GAAUrB,EAEtBD,EAAW,GAAD,mBAAKuB,GAAL,CAAiBE,KAC3B3B,EAAeyB,EAAWnB,UAuBQnC,QAASA,IACvC,wBAAQG,UAAU,UAAUJ,QArBlC,WACEgC,EAAW,CAACN,IACZI,EAAe,IAmBX,wBAIF,sBAAK1B,UAAU,YAAf,UACE,8BAAMwC,IACN,6BAAKG,WE9DEW,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c411c3ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Board = ({ onClick, squares }) => {\r\n  function renderSquare(i) {\r\n    return (\r\n      <button className=\"square\" onClick={() => onClick(i)}>\r\n        {squares[i]}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import * as React from \"react\";\r\n\r\n/**\r\n *\r\n * @param {String} key The key to set in localStorage for this value\r\n * @param {Object} defaultValue The value to use if it is not already in localStorage\r\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\r\n */\r\n\r\nfunction useLocalStorageState(\r\n  key,\r\n  defaultValue = \"\",\r\n  { serialize = JSON.stringify, deserialize = JSON.parse } = {}\r\n) {\r\n  const [state, setState] = React.useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key);\r\n    if (valueInLocalStorage) {\r\n      return deserialize(valueInLocalStorage);\r\n    }\r\n    return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\r\n  });\r\n\r\n  const prevKeyRef = React.useRef(key);\r\n\r\n  React.useEffect(() => {\r\n    const prevKey = prevKeyRef.current;\r\n    if (prevKey !== key) {\r\n      window.localStorage.removeItem(prevKey);\r\n    }\r\n    prevKeyRef.current = key;\r\n    window.localStorage.setItem(key, serialize(state));\r\n  }, [key, state, serialize]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport { useLocalStorageState };\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport { useLocalStorageState } from \"../functions/utils\";\r\nimport {\r\n  calculateStatus,\r\n  calculateNextValue,\r\n  calculateWinner,\r\n} from \"../functions/boardFunctions\";\r\n\r\nconst Game = () => {\r\n  const initialSquares = Array(9).fill(null);\r\n\r\n  //  squares is the state for this component. Add useState for squares\r\n  // const [squares, setSquares] = useLocalStorageState(\"squares\", initialSquares);\r\n\r\n  const [currentStep, setCurrentStep] = useLocalStorageState(\r\n    \"ticTacToe-Steps\",\r\n    0\r\n  );\r\n  const [history, setHistory] = useLocalStorageState(\"ticTacToe-History\", [\r\n    initialSquares,\r\n  ]);\r\n\r\n  const squares = history[currentStep];\r\n\r\n  const nextValue = calculateNextValue(squares);\r\n  const winner = calculateWinner(squares);\r\n  const status = calculateStatus(winner, squares, nextValue);\r\n\r\n  function selectSquare(square) {\r\n    if (winner || squares[square]) {\r\n      return;\r\n    }\r\n\r\n    const newHistory = history.slice(0, currentStep + 1);\r\n    const squaresCopy = [...squares];\r\n    squaresCopy[square] = nextValue;\r\n\r\n    setHistory([...newHistory, squaresCopy]);\r\n    setCurrentStep(newHistory.length);\r\n  }\r\n\r\n  function restart() {\r\n    setHistory([initialSquares]);\r\n    setCurrentStep(0);\r\n  }\r\n\r\n  const moves = history.map((stepSquares, step) => {\r\n    const desc = step === 0 ? `Got to game start` : `Go to move #${step}`;\r\n    const isCurrentStep = step === currentStep;\r\n    return (\r\n      <li key={step}>\r\n        <button disabled={isCurrentStep} onClick={() => setCurrentStep(step)}>\r\n          {desc} {isCurrentStep ? \"(current)\" : null}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board onClick={selectSquare} squares={squares} />\r\n        <button className=\"restart\" onClick={restart}>\r\n          restart\r\n        </button>\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","// import React from \"react\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction calculateStatus(winner, squares, nextValue) {\r\n  return winner\r\n    ? `Winner: ${winner}`\r\n    : squares.every(Boolean)\r\n    ? `Its a Draw`\r\n    : `Next player: ${nextValue}`;\r\n}\r\n\r\nexport { calculateStatus };\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction calculateNextValue(squares) {\r\n  return squares.filter(Boolean).length % 2 === 0 ? \"X\" : \"O\";\r\n}\r\n\r\nexport { calculateNextValue };\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport { calculateWinner };\r\n","import \"./App.css\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}